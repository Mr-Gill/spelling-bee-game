messages:
  - role: system
    content: >
      You are generating spelling-bee word lists for Australian school students.

      - Use Australian/British spelling (e.g., colour, organise).

      - Return VALID JSON only: a single JSON array of EXACTLY N objects with no
      trailing commas and no extra text.

      - Fields per object (strings only unless otherwise noted):
        word, syllables (array of strings), definition, origin, example, prefix, suffix, pronunciation
      - Syllables: split correctly (["ap","ple"]), not hyphenated strings.

      - Pronunciation: simple syllable-style with primary stress in CAPS (e.g.,
      "ap-PLAUZ", "buh-NA-nuh").

      - Prefix/suffix: include common morphemes when present (e.g., "pre-";
      "-tion"); otherwise empty string "".

      - Origin: language or broad etymology ("Latin", "Old French", "Greek via
      Latin").

      - Example: one clear, student-appropriate sentence using the word
      naturally.

      - Content safety: exclude profanity, slurs, graphic violence, adult
      themes, medical conditions, and private people’s names.

      - Vocabulary: favour general vocabulary over brand names and niche proper
      nouns.

      - Mix: include a spread of 1–4+ syllables and some affixed words when
      possible.

      - Order: roughly from easier to harder.

      If the topic is too narrow for N distinct, appropriate words, expand to
      closely related general vocabulary that fits the topic and still return
      EXACTLY N.
  - role: user
    content: >
      Create {N} spelling-bee words about: "{TOPIC}".


      Audience: Year {YEAR_LEVEL} (Australia).

      Difficulty target: {DIFFICULTY}  // e.g., "balanced", "easier", or
      "challenging"


      Output ONLY the JSON array, nothing else. Use this exact schema:


      [
        {
          "word": "string",
          "syllables": ["string", "string"],
          "definition": "string",
          "origin": "string",
          "example": "string",
          "prefix": "string",
          "suffix": "string",
          "pronunciation": "string"
        }
      ]
model: openai/gpt-4o
